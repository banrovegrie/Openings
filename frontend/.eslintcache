[{"/home/alapan/Documents/Projects/Openings/frontend/src/index.js":"1","/home/alapan/Documents/Projects/Openings/frontend/src/components/SignIn.js":"2","/home/alapan/Documents/Projects/Openings/frontend/src/components/R_SignUp.js":"3","/home/alapan/Documents/Projects/Openings/frontend/src/components/A_SignUp.js":"4","/home/alapan/Documents/Projects/Openings/frontend/src/store.js":"5","/home/alapan/Documents/Projects/Openings/frontend/src/components/A_Dashboard.js":"6"},{"size":750,"mtime":1611127263437,"results":"7","hashOfConfig":"8"},{"size":4750,"mtime":1611127170567,"results":"9","hashOfConfig":"8"},{"size":5454,"mtime":1611088286439,"results":"10","hashOfConfig":"8"},{"size":8843,"mtime":1611088234508,"results":"11","hashOfConfig":"8"},{"size":74,"mtime":1611084752902,"results":"12","hashOfConfig":"8"},{"size":7388,"mtime":1611132742190,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"10fkk0p",{"filePath":"18","messages":"19","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"17"},"/home/alapan/Documents/Projects/Openings/frontend/src/index.js",["33","34","35"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SignIn from './components/SignIn'\nimport R_SignUp from './components/R_SignUp'\nimport A_SignUp from './components/A_SignUp'\nimport A_Dashboard from './components/A_Dashboard'\nimport { /*Link,*/ BrowserRouter as Router, Route} from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    {sessionStorage.setItem('globalID', '0')}\n    \n    <Route path='/' exact>\n      <SignIn />\n    </Route>\n    \n    <Route path='/sign-up-recruiter' exact>\n      <R_SignUp />\n    </Route>\n    \n    <Route path='/sign-up-applicant' exact>\n      <A_SignUp />\n    </Route>\n\n    <Route path='/dashboard-applicant' exact>\n      <A_Dashboard />\n    </Route>\n\n  </Router>,\n  document.getElementById('root')\n);",["36","37"],"/home/alapan/Documents/Projects/Openings/frontend/src/components/SignIn.js",["38","39","40","41","42","43"],"import { React, useState, useEffect } from 'react';\nimport {\n  Avatar, Button, makeStyles, Container, TextField,\n  Typography, Box, CssBaseline, FormControlLabel, Checkbox,\n  Link, Grid, StylesProvider\n} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { BrowserRouter as Router, Redirect, Route, useHistory} from 'react-router-dom';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  sessionStorage.setItem('globalID', '0');\n  console.log(sessionStorage.getItem('globalID'));\n  let [login, setLogin] = useState(\n    {\n      email: ' ',\n      password: ' '\n    }\n  );  \n\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.get('http://localhost:5000/applicants')\n      .then(res => {\n        const loginData = res.data;\n        console.log(loginData);\n        loginData.forEach(log => {\n          if (log.email === login.email && log.password === login.password)\n          {\n            sessionStorage.setItem('globalID', log._id);\n            console.log(sessionStorage.getItem('globalID'));\n            history.push('/dashboard-applicant');\n          }\n        });\n        const globalID = sessionStorage.getItem('globalID');\n        console.log(globalID);\n      })\n      .catch(err => console.log(err));\n\n    if (sessionStorage.getItem('globalID') !== '0');\n    else\n    {\n      axios.get('http://localhost:5000/recruiters')\n        .then(res => {\n          const loginData = res.data;\n          console.log(loginData);\n          loginData.forEach(log => {\n            if (log.email === login.email && log.password === login.password)\n            {\n              sessionStorage.setItem('globalID', log._id);\n              console.log(sessionStorage.getItem('globalID'));\n              history.push('/dashboard-recruiter');\n            }\n          });\n          const globalID = sessionStorage.getItem('globalID');\n          console.log(globalID);\n        })\n        .catch(err => console.log(err));\n\n      if (sessionStorage.getItem('globalID') !== '0');\n      else\n        history.push('/');\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} \n          noValidate\n          onSubmit={handleSubmit}\n        >\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            onChange = {event => {\n              setLogin(login = {\n                email: event.target.value, \n                password: login.password\n              });\n              console.log(login);\n            }}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange = {event => {\n              setLogin(login = {\n                email: login.email, \n                password: event.target.value\n              });\n              console.log(login);\n            }}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"/sign-up-recruiter\" variant=\"body2\">\n                {\"Sign Up as Recruiter\"}\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/sign-up-applicant\" variant=\"body2\">\n                {\"Sign Up as Applicant\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}","/home/alapan/Documents/Projects/Openings/frontend/src/components/R_SignUp.js",["44","45","46"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios';\nimport { useHistory } from 'react-router';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function R_SignUp() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  sessionStorage.setItem('globalID', '0');\n\n  let [signup, setSignup] = useState(\n    {\n      name: ' ',\n      password: ' ',\n      email: ' ',\n      contact: ' ',\n      bio: ' '\n    }\n  );\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.post('http://localhost:5000/recruiters/add', signup)\n      .then(response => {\n        console.log(response);\n        history.push('/');\n      })\n      .catch(err => console.log(err));\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} \n          noValidate\n          onSubmit={handleSubmit}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"Name\"\n                label=\"Name\"\n                name=\"Name\"\n                autoComplete=\"name\"\n                onChange = {event => {\n                  setSignup(signup = {\n                    ...signup,\n                    name: event.target.value\n                  });\n                  console.log(signup);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange = {event => {\n                  setSignup(signup = {\n                    ...signup,\n                    email: event.target.value\n                  });\n                  console.log(signup);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange = {event => {\n                  setSignup(signup = {\n                    ...signup,\n                    password: event.target.value\n                  });\n                  console.log(signup);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"contact\"\n                label=\"Contact\"\n                type=\"number\"\n                id=\"contact\"\n                autoComplete=\"contact\"\n                onChange = {event => {\n                  setSignup(signup = {\n                    ...signup,\n                    contact: event.target.value\n                  });\n                  console.log(signup);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"bio\"\n                label=\"Bio\"\n                id=\"bio\"\n                onChange = {event => {\n                  setSignup(signup = {\n                    ...signup,\n                    bio: event.target.value\n                  });\n                  console.log(signup);\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}","/home/alapan/Documents/Projects/Openings/frontend/src/components/A_SignUp.js",["47","48","49","50","51","52","53","54"],"import { React, useState, useEffect } from 'react';\nimport {\n  Avatar, Button, makeStyles, Container, TextField,\n  Typography, Box, CssBaseline, FormControlLabel, Checkbox,\n  Link, Grid, StylesProvider\n} from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { BrowserRouter as Router, Redirect, Route, useHistory} from 'react-router-dom';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function A_SignUp() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  sessionStorage.setItem('globalID', '0');\n\n  let [signup, setSignup] = useState(\n    {\n      name: \" \",\n      email: \" \",\n      password: \" \",\n      education:\n      {\n        institute: \" \",\n        start_year: \" \",\n        end_year: \" \"\n      },\n      skills: [\"haskell\", \"cpp\", \"python\"]\n    }\n  );\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.post('http://localhost:5000/applicants/add', signup)\n      .then(response => {\n        console.log(response);\n        history.push('/');\n      })\n      .catch(err => console.log(err));\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} \n          noValidate\n          onSubmit={handleSubmit}\n        >\n          <Grid container spacing={2}>\n          <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"Name\"\n                label=\"Name\"\n                name=\"Name\"\n                autoComplete=\"name\"\n                onChange = {event => {\n                  setSignup(signup = {\n                    name: event.target.value,\n                    email: signup.email,\n                    password: signup.password,\n                    education:\n                    {\n                        institute: signup.education.institute,\n                        start_year: signup.education.start_year,\n                        end_year: signup.education.start_year\n                    },\n                    skills: signup.skills\n                  });\n                  console.log(signup);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange = {event => {\n                  setSignup(signup = {\n                    name: signup.name,\n                    email: event.target.value,\n                    password: signup.password,\n                    education:\n                    {\n                        institute: signup.education.institute,\n                        start_year: signup.education.start_year,\n                        end_year: signup.education.start_year\n                    },\n                    skills: signup.skills\n                  });\n                  console.log(signup);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange = {event => {\n                  setSignup(signup = {\n                    name: signup.name,\n                    email: signup.email,\n                    password: event.target.value,\n                    education:\n                    {\n                        institute: signup.education.institute,\n                        start_year: signup.education.start_year,\n                        end_year: signup.education.start_year\n                    },\n                    skills: signup.skills\n                  });\n                  console.log(signup);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12}>\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"institute\"\n              label=\"Institute\"\n              id=\"institute\"\n              onChange = {event => {\n                setSignup(signup = {\n                  name: signup.name,\n                  email: signup.email,\n                  password: signup.password,\n                  education:\n                  {\n                      institute: event.target.value,\n                      start_year: signup.education.start_year,\n                      end_year: signup.education.start_year\n                  },\n                  skills: signup.skills\n                });\n                console.log(signup);\n              }}\n            />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"start_year\"\n              label=\"Start\"\n              type=\"date\"\n              //defaultValue=\"2001-01-01\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange = {event => {\n                setSignup(signup = {\n                  name: signup.name,\n                  email: signup.email,\n                  password: signup.password,\n                  education:\n                  {\n                      institute: signup.education.institute,\n                      start_year: event.target.value,\n                      end_year: signup.education.start_year\n                  },\n                  skills: signup.skills\n                });\n                console.log(signup);\n              }}\n            />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n            <TextField\n              id=\"end_year\"\n              label=\"End\"\n              type=\"date\"\n              //defaultValue=\"2005-01-01\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange = {event => {\n                setSignup(signup = {\n                  name: signup.name,\n                  email: signup.email,\n                  password: signup.password,\n                  education:\n                  {\n                      institute: signup.education.institute,\n                      start_year: signup.education.start_year,\n                      end_year: event.target.value\n                  },\n                  skills: signup.skills\n                });\n                console.log(signup);\n              }}\n            />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"skills\"\n                label=\"Skills (comma separated)\"\n                id=\"skills\"\n                defaultValue=\"haskell, cpp, python\"\n                onChange = {event => {\n                  let str = event.target.value;\n                  let arr = str.split(',').map(element => element.trim())\n                  setSignup(signup = {\n                    name: signup.name,\n                    email: signup.email,\n                    password: signup.password,\n                    education:\n                    {\n                        institute: signup.education.institute,\n                        start_year: signup.education.start_year,\n                        end_year: signup.education.start_year\n                    },\n                    skills: arr\n                  });\n                  console.log(signup);\n                }}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}",["55","56"],"/home/alapan/Documents/Projects/Openings/frontend/src/store.js",["57"],"/home/alapan/Documents/Projects/Openings/frontend/src/components/A_Dashboard.js",["58","59","60","61"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { \n    Drawer, CssBaseline, AppBar,\n    Toolbar, List, Typography,\n    Divider, IconButton, ListItem,\n    ListItemIcon, ListItemText, \n    Button, Paper\n} from '@material-ui/core';\nimport LockIcon from '@material-ui/icons/Lock';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport NaturePeopleIcon from '@material-ui/icons/NaturePeople';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport axios from 'axios';\nimport { BrowserRouter as Router, useHistory } from 'react-router-dom';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      width: \"100%\",\n    },\n  },\n  paperContent: {\n    marginTop: theme.spacing(5),\n    marginBottom: theme.spacing(5),\n    marginLeft: theme.spacing(4),\n    marginRight: theme.spacing(4),\n  },\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const classes2 = useStyles2();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const history = useHistory();\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Dashboard\n            {/*Dashboard, My Profile, My Applications*/}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          <ListItem button key=\"profile\"\n            onClick={() => {\n              history.push('/profile-applicant');\n            }}\n          >\n            <ListItemIcon><NaturePeopleIcon /></ListItemIcon>\n            <ListItemText primary=\"My Profile\" />\n          </ListItem>\n          <ListItem button key=\"my_applications\"\n            onClick={() => {\n              history.push('/applications-applicant');\n            }}\n          >\n            <ListItemIcon><AssignmentTurnedInIcon /></ListItemIcon>\n            <ListItemText primary=\"My Applications\" />\n          </ListItem>\n        </List>\n        <Divider />\n        <List>\n            <ListItem button key='logout' \n              onClick={() => {\n                sessionStorage.setItem('globalID', '0');\n                history.push('/');\n              }}\n            >\n              <ListItemIcon><LockIcon /></ListItemIcon>\n              <ListItemText primary='Logout' />\n            </ListItem>\n        </List>\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n        <h1 align='center'>Welcome to Bible</h1>\n\n        <div className={classes2.root}>\n          <Paper elevation={6}>\n            <div className={classes2.paperContent}>\n            <Typography paragraph>\n              After Sodom was destroyed, Lot took his two daughters to \n              live with them in a cave (like ya do). One day, his older \n              daughter said to the younger: “Our father is old, and there \n              is no man around here to give us children — as is the custom \n              all over the earth. Let’s get our father to drink wine and then \n              sleep with him and preserve our family line through our father.” (Genesis 19:30)\n            </Typography>\n            </div>\n          </Paper>\n        </div>\n        <br/> <br/>\n        <div className={classes2.root}>\n          <Paper elevation={6}>\n            <div className={classes2.paperContent}>\n              <Typography paragraph>\n                This plan worked out so well that the younger daughter did \n                it the following night, with Lot being entirely unaware of it \n                again, somehow! “So they got their father to drink wine that night \n                also, and the younger daughter went in and slept with him. Again he \n                was not aware of it when she lay down or when she got up. So both \n                of Lot’s daughters became pregnant by their father.” (Genesis 19:35)\n              </Typography>\n            </div>\n          </Paper>\n        </div>\n        <br/> <br/>\n        <div className={classes2.root}>\n          <Paper elevation={6}>\n            <div className={classes2.paperContent}>\n              <Typography paragraph>\n                That’s the end! Nothing bad happens to these folks. They bear \n                sons and name them Moab and Ben. To recap: Roofie-ing one’s \n                elderly father and raping him = fine. Agreeing to lead a slave \n                rebellion for God but forget to circumcise your infant son = DEATH.\n              </Typography>\n            </div>\n          </Paper>\n        </div>\n      </main>\n    </div>\n  );\n}",{"ruleId":"62","severity":1,"message":"63","line":18,"column":7,"nodeType":"64","endLine":18,"endColumn":19},{"ruleId":"62","severity":1,"message":"65","line":22,"column":7,"nodeType":"64","endLine":22,"endColumn":19},{"ruleId":"62","severity":1,"message":"66","line":26,"column":7,"nodeType":"64","endLine":26,"endColumn":22},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"75","line":4,"column":15,"nodeType":"73","messageId":"74","endLine":4,"endColumn":18},{"ruleId":"71","severity":1,"message":"76","line":5,"column":15,"nodeType":"73","messageId":"74","endLine":5,"endColumn":29},{"ruleId":"71","severity":1,"message":"77","line":8,"column":27,"nodeType":"73","messageId":"74","endLine":8,"endColumn":33},{"ruleId":"71","severity":1,"message":"78","line":8,"column":35,"nodeType":"73","messageId":"74","endLine":8,"endColumn":43},{"ruleId":"71","severity":1,"message":"79","line":8,"column":45,"nodeType":"73","messageId":"74","endLine":8,"endColumn":50},{"ruleId":"71","severity":1,"message":"80","line":6,"column":8,"nodeType":"73","messageId":"74","endLine":6,"endColumn":24},{"ruleId":"71","severity":1,"message":"81","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":16},{"ruleId":"71","severity":1,"message":"75","line":10,"column":8,"nodeType":"73","messageId":"74","endLine":10,"endColumn":11},{"ruleId":"71","severity":1,"message":"72","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"75","line":4,"column":15,"nodeType":"73","messageId":"74","endLine":4,"endColumn":18},{"ruleId":"71","severity":1,"message":"80","line":4,"column":33,"nodeType":"73","messageId":"74","endLine":4,"endColumn":49},{"ruleId":"71","severity":1,"message":"81","line":4,"column":51,"nodeType":"73","messageId":"74","endLine":4,"endColumn":59},{"ruleId":"71","severity":1,"message":"76","line":5,"column":15,"nodeType":"73","messageId":"74","endLine":5,"endColumn":29},{"ruleId":"71","severity":1,"message":"77","line":8,"column":27,"nodeType":"73","messageId":"74","endLine":8,"endColumn":33},{"ruleId":"71","severity":1,"message":"78","line":8,"column":35,"nodeType":"73","messageId":"74","endLine":8,"endColumn":43},{"ruleId":"71","severity":1,"message":"79","line":8,"column":45,"nodeType":"73","messageId":"74","endLine":8,"endColumn":50},{"ruleId":"67","replacedBy":"82"},{"ruleId":"69","replacedBy":"83"},{"ruleId":"71","severity":1,"message":"84","line":1,"column":8,"nodeType":"73","messageId":"74","endLine":1,"endColumn":13},{"ruleId":"71","severity":1,"message":"85","line":9,"column":5,"nodeType":"73","messageId":"74","endLine":9,"endColumn":11},{"ruleId":"71","severity":1,"message":"86","line":13,"column":8,"nodeType":"73","messageId":"74","endLine":13,"endColumn":21},{"ruleId":"71","severity":1,"message":"87","line":18,"column":8,"nodeType":"73","messageId":"74","endLine":18,"endColumn":13},{"ruleId":"71","severity":1,"message":"77","line":19,"column":27,"nodeType":"73","messageId":"74","endLine":19,"endColumn":33},"react/jsx-pascal-case","Imported JSX component R_SignUp must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component A_SignUp must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component A_Dashboard must be in PascalCase or SCREAMING_SNAKE_CASE","no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'StylesProvider' is defined but never used.","'Router' is defined but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.",["88"],["89"],"'React' is defined but never used.","'Button' is defined but never used.","'DashboardIcon' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]